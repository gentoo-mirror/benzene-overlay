--- a/docs/convolution/index.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/convolution/index.rst	2023-04-11 19:10:06.688616781 +0800
@@ -42,8 +42,9 @@
     from astropy.convolution import convolve
 
 
-    # Load the data from data.astropy.org
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # Load the data from data.astropy.org. Use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
     hdu = fits.open(filename)[0]
 
     # Scale the file to have reasonable numbers
@@ -302,8 +303,9 @@
    from astropy.utils.data import get_pkg_data_filename
    from astropy.convolution import Gaussian2DKernel, interpolate_replace_nans
 
-   # Load the data from data.astropy.org
-   filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+   # Load the data from data.astropy.org. Use local fits if no network
+   try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+   except Exception: filename = 'gc_msx_e.fits'
 
    hdu = fits.open(filename)[0]
    img = hdu.data[50:90, 60:100] * 1e5
@@ -369,8 +371,9 @@
    from astropy.utils.data import get_pkg_data_filename
    from astropy.convolution import Gaussian2DKernel, interpolate_replace_nans
 
-   # Load the data from data.astropy.org
-   filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+   # Load the data from data.astropy.org. Use local fits if no network
+   try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+   except Exception: filename = 'gc_msx_e.fits'
 
    hdu = fits.open(filename)[0]
    img = hdu.data[50:90, 60:100] * 1e5
--- a/docs/convolution/non_normalized_kernels.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/convolution/non_normalized_kernels.rst	2023-04-11 19:10:06.688616781 +0800
@@ -35,8 +35,9 @@
     from astropy.convolution import convolve, convolve_fft
 
 
-    # Load the data from data.astropy.org
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # Load the data from data.astropy.org. Use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
     hdu = fits.open(filename)[0]
 
     # Scale the file to have reasonable numbers
--- a/docs/coordinates/performance.inc.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/coordinates/performance.inc.rst	2023-04-11 19:10:06.688616781 +0800
@@ -140,8 +140,9 @@
         lon=-17.89 * u.deg, lat=28.76 * u.deg, height=2200 * u.m
     )
 
-    # A celestial object in ICRS
-    crab = SkyCoord.from_name("Crab Nebula")
+    # A celestial object in ICRS. Use local data if no network
+    try: crab = SkyCoord.from_name("Crab Nebula")
+    except Exception: crab = SkyCoord(ra=83.6333*u.degree, dec=22.0133*u.degree, frame='icrs')
 
     # target horizontal coordinate frame
     altaz = AltAz(obstime=t, location=location)
--- a/docs/timeseries/analysis.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/timeseries/analysis.rst	2023-04-11 19:10:06.691949852 +0800
@@ -137,7 +137,9 @@
 
     from astropy.timeseries import TimeSeries
     from astropy.utils.data import get_pkg_data_filename
-    example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+    # use local fits if no network
+    try: example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+    except Exception: example_data = 'kplr010666592-2009131110544_slc.fits'
     kepler = TimeSeries.read(example_data, format='kepler.fits')
 
 (See :ref:`timeseries-io` for more details about reading in data). We can then
@@ -191,7 +193,9 @@
     from astropy.timeseries import aggregate_downsample
     from astropy.utils.data import get_pkg_data_filename
 
-    example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+    # use local fits if no network
+    try: example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+    except Exception: example_data = 'kplr010666592-2009131110544_slc.fits'
     kepler = TimeSeries.read(example_data, format='kepler.fits')
 
     import warnings
@@ -234,7 +238,9 @@
    from astropy.timeseries import TimeSeries
    from astropy.utils.data import get_pkg_data_filename
 
-   example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+   # use local fits if no network
+   try: example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+   except Exception: example_data = 'kplr010666592-2009131110544_slc.fits'
    kepler = TimeSeries.read(example_data, format='kepler.fits')
 
 .. plot::
@@ -273,7 +279,9 @@
    from astropy.timeseries import TimeSeries
    from astropy.utils.data import get_pkg_data_filename
 
-   example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+   # use local fits if no network
+   try: example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+   except Exception: example_data = 'kplr010666592-2009131110544_slc.fits'
    kepler = TimeSeries.read(example_data, format='kepler.fits')
    kepler_folded = kepler.fold(period=2.2 * u.day, epoch_time='2009-05-02T20:53:40')
 
--- a/docs/timeseries/index.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/timeseries/index.rst	2023-04-11 19:10:06.691949852 +0800
@@ -37,7 +37,8 @@
 source::
 
     >>> from astropy.utils.data import get_pkg_data_filename
-    >>> filename = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')  # doctest: +REMOTE_DATA
+    >>> try: filename = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')  # doctest: +REMOTE_DATA
+    >>> except Exception: filename = kplr010666592-2009131110544_slc.fits'  # Use local fits if no network
 
 .. note::
     The light curve provided here is handpicked for example purposes. For
@@ -167,7 +168,9 @@
    :nofigs:
 
     from astropy.utils.data import get_pkg_data_filename
-    filename = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+    except Exception: filename = 'kplr010666592-2009131110544_slc.fits'
     from astropy.timeseries import TimeSeries
     ts = TimeSeries.read(filename, format='kepler.fits')
 
--- a/docs/timeseries/io.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/timeseries/io.rst	2023-04-11 19:10:06.691949852 +0800
@@ -28,7 +28,9 @@
    :nofigs:
 
    from astropy.utils.data import get_pkg_data_filename
-   example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+   # use local fits if no network
+   try: example_data = get_pkg_data_filename('timeseries/kplr010666592-2009131110544_slc.fits')
+   except Exception: example_data = 'kplr010666592-2009131110544_slc.fits'
 
 .. note::
     The light curve provided here is handpicked for example purposes. To get
--- a/docs/visualization/rgb.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/rgb.rst	2023-04-11 19:10:06.691949852 +0800
@@ -65,10 +65,13 @@
    from astropy.io import fits
    from astropy.utils.data import get_pkg_data_filename
 
-   # Read in the three images downloaded from here:
-   g_name = get_pkg_data_filename('visualization/reprojected_sdss_g.fits.bz2')
-   r_name = get_pkg_data_filename('visualization/reprojected_sdss_r.fits.bz2')
-   i_name = get_pkg_data_filename('visualization/reprojected_sdss_i.fits.bz2')
+   # Read in the three images downloaded from here, using local fits if no network:
+   try: g_name = get_pkg_data_filename('visualization/reprojected_sdss_g.fits.bz2')
+   except Exception: g_name = 'reprojected_sdss_g.fits.bz2'
+   try: r_name = get_pkg_data_filename('visualization/reprojected_sdss_r.fits.bz2')
+   except Exception: r_name = 'reprojected_sdss_r.fits.bz2'
+   try: i_name = get_pkg_data_filename('visualization/reprojected_sdss_i.fits.bz2')
+   except Exception: i_name = 'reprojected_sdss_i.fits.bz2'
    g = fits.open(g_name)[0].data
    r = fits.open(r_name)[0].data
    i = fits.open(i_name)[0].data
--- a/docs/visualization/wcsaxes/controlling_axes.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/controlling_axes.rst	2023-04-11 19:10:06.691949852 +0800
@@ -18,7 +18,9 @@
     from astropy.io import fits
     from astropy.utils.data import get_pkg_data_filename
 
-    filename = get_pkg_data_filename('l1448/l1448_13co.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('l1448/l1448_13co.fits')
+    except Exception: filename = 'l1448_13co.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
 
--- a/docs/visualization/wcsaxes/custom_frames.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/custom_frames.rst	2023-04-11 19:10:06.691949852 +0800
@@ -18,7 +18,9 @@
     from astropy.visualization.wcsaxes.frame import EllipticalFrame
     import matplotlib.pyplot as plt
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
 
@@ -46,7 +48,9 @@
     from matplotlib import patheffects
     import matplotlib.pyplot as plt
 
-    filename = get_pkg_data_filename('allsky/allsky_rosat.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('allsky/allsky_rosat.fits')
+    except Exception: filename = 'allsky_rosat.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
 
@@ -108,7 +112,9 @@
      from astropy.utils.data import get_pkg_data_filename
      import matplotlib.pyplot as plt
 
-     filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+     # use local fits if no network
+     try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+     except Exception: filename = 'gc_msx_e.fits'
      hdu = fits.open(filename)[0]
      wcs = WCS(hdu.header)
 
--- a/docs/visualization/wcsaxes/images_contours.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/images_contours.rst	2023-04-11 19:10:06.691949852 +0800
@@ -13,7 +13,9 @@
     from astropy.io import fits
     from astropy.utils.data import get_pkg_data_filename
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
 
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
--- a/docs/visualization/wcsaxes/index.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/index.rst	2023-04-11 19:10:06.691949852 +0800
@@ -27,7 +27,9 @@
     from astropy.io import fits
     from astropy.utils.data import get_pkg_data_filename
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
 
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
--- a/docs/visualization/wcsaxes/initializing_axes.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/initializing_axes.rst	2023-04-11 19:10:06.691949852 +0800
@@ -25,7 +25,9 @@
     from astropy.io import fits
     from astropy.utils.data import get_pkg_data_filename
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
 
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
--- a/docs/visualization/wcsaxes/overlaying_coordinate_systems.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/overlaying_coordinate_systems.rst	2023-04-11 19:10:06.695282925 +0800
@@ -13,7 +13,9 @@
     from astropy.io import fits
     from astropy.utils.data import get_pkg_data_filename
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
 
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
--- a/docs/visualization/wcsaxes/overlays.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/overlays.rst	2023-04-11 19:10:06.695282925 +0800
@@ -14,7 +14,9 @@
     from astropy.utils.data import get_pkg_data_filename
     import matplotlib.pyplot as plt
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
 
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
@@ -113,7 +115,9 @@
     from astropy.utils.data import get_pkg_data_filename
     import matplotlib.pyplot as plt
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
 
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
@@ -149,7 +153,9 @@
     from astropy.utils.data import get_pkg_data_filename
     import matplotlib.pyplot as plt
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
 
@@ -226,7 +232,9 @@
     from astropy.visualization.wcsaxes import Quadrangle
     import matplotlib.pyplot as plt
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
 
@@ -278,7 +286,9 @@
     from matplotlib.patches import Rectangle
     import matplotlib.pyplot as plt
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
 
@@ -292,7 +302,9 @@
    :include-source:
    :align: center
 
-    filename = get_pkg_data_filename('galactic_center/gc_bolocam_gps.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_bolocam_gps.fits')
+    except Exception: filename = 'gc_bolocam_gps.fits'
     hdu = fits.open(filename)[0]
     ax.contour(hdu.data, transform=ax.get_transform(WCS(hdu.header)),
                levels=[1,2,3,4,5,6], colors='white')
@@ -314,7 +326,9 @@
     from astropy.utils.data import get_pkg_data_filename
     import matplotlib.pyplot as plt
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
 
--- a/docs/visualization/wcsaxes/slicing_datacubes.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/slicing_datacubes.rst	2023-04-11 19:10:06.695282925 +0800
@@ -26,7 +26,9 @@
     from astropy.wcs import WCS
     from astropy.io import fits
     from astropy.utils.data import get_pkg_data_filename
-    filename = get_pkg_data_filename('l1448/l1448_13co.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('l1448/l1448_13co.fits')
+    except Exception: filename = 'l1448_13co.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
     image_data = hdu.data
@@ -97,7 +99,9 @@
     from astropy.wcs import WCS
     from astropy.io import fits
     from astropy.utils.data import get_pkg_data_filename
-    filename = get_pkg_data_filename('l1448/l1448_13co.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('l1448/l1448_13co.fits')
+    except Exception: filename = 'l1448_13co.fits'
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
     image_data = hdu.data
--- a/docs/visualization/wcsaxes/ticks_labels_grid.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/visualization/wcsaxes/ticks_labels_grid.rst	2023-04-11 19:10:06.695282925 +0800
@@ -13,7 +13,9 @@
     from astropy.io import fits
     from astropy.utils.data import get_pkg_data_filename
 
-    filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    # use local fits if no network
+    try: filename = get_pkg_data_filename('galactic_center/gc_msx_e.fits')
+    except Exception: filename = 'gc_msx_e.fits'
 
     hdu = fits.open(filename)[0]
     wcs = WCS(hdu.header)
--- a/docs/wcs/wcsapi.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/wcs/wcsapi.rst	2023-04-11 19:10:06.695282925 +0800
@@ -55,7 +55,8 @@
     >>> from astropy.wcs import WCS
     >>> from astropy.utils.data import get_pkg_data_filename
     >>> from astropy.io import fits
-    >>> filename = get_pkg_data_filename('galactic_center/gc_2mass_k.fits')  # doctest: +REMOTE_DATA
+    >>> try: filename = get_pkg_data_filename('galactic_center/gc_2mass_k.fits')  # doctest: +REMOTE_DATA
+    >>> except Exception: filename = gc_2mass_k.fits'  # Use local fits if no network
     >>> hdulist = fits.open(filename)  # doctest: +REMOTE_DATA
     >>> hdu = hdulist[0]  # doctest: +REMOTE_DATA
     >>> wcs = WCS(hdu.header)  # doctest: +REMOTE_DATA
@@ -140,7 +141,8 @@
 Let's now take a look at a WCS for a spectral cube (two celestial axes and one
 spectral axis)::
 
-    >>> filename = get_pkg_data_filename('l1448/l1448_13co.fits')  # doctest: +REMOTE_DATA
+    >>> try: filename = get_pkg_data_filename('l1448/l1448_13co.fits')  # doctest: +REMOTE_DATA
+    >>> except Exception: filename = 'l1448_13co.fits'  # Use local fits if no network
     >>> hdulist = fits.open(filename)  # doctest: +REMOTE_DATA
     >>> hdu = hdulist[0]  # doctest: +REMOTE_DATA
     >>> wcs = WCS(hdu.header)  # doctest: +REMOTE_DATA
@@ -245,7 +247,8 @@
 any WCS object that conforms to the :class:`~astropy.wcs.wcsapi.BaseLowLevelWCS`
 API. To demonstrate this, let's start off by reading in a spectral cube file::
 
-    >>> filename = get_pkg_data_filename('l1448/l1448_13co.fits')  # doctest: +REMOTE_DATA
+    >>> try: filename = get_pkg_data_filename('l1448/l1448_13co.fits')  # doctest: +REMOTE_DATA
+    >>> except Exception: filename = 'l1448_13co.fits'  # Use local fits if no network
     >>> wcs = WCS(fits.getheader(filename, ext=0))  # doctest: +REMOTE_DATA
 
 The ``wcs`` object is an instance of :class:`~astropy.wcs.WCS` which conforms to the
--- a/docs/wcs/wcstools.rst	2023-03-28 18:42:59.000000000 +0800
+++ b/docs/wcs/wcstools.rst	2023-04-11 19:14:20.876182810 +0800
@@ -33,7 +33,9 @@
     from astropy.wcs import WCS, FITSFixedWarning
     from astropy.utils.data import get_pkg_data_filename
 
-    filename = get_pkg_data_filename('tutorials/FITS-images/HorseHead.fits')
+    # use local data if no network
+    try: filename = get_pkg_data_filename('tutorials/FITS-images/HorseHead.fits')
+    except Exception: filename = 'HorseHead.fits'
 
     hdu = fits.open(filename)[0]
     with warnings.catch_warnings():
--- a/examples/coordinates/plot_obs-planning.py	2023-03-28 18:42:59.000000000 +0800
+++ b/examples/coordinates/plot_obs-planning.py	2023-04-11 19:10:06.695282925 +0800
@@ -55,7 +55,9 @@
 #
 # Get the coordinates of M33:
 
-m33 = SkyCoord.from_name('M33')
+# use local data if no network
+try: m33 = SkyCoord.from_name('M33')
+except Exception: m33 = SkyCoord(ra=23.46206906*u.degree, dec=30.66017511*u.degree, frame='icrs')
 
 ##############################################################################
 # Use `astropy.coordinates.EarthLocation` to provide the location of Bear
--- a/examples/io/fits-tables.py	2023-03-28 18:42:59.000000000 +0800
+++ b/examples/io/fits-tables.py	2023-04-11 19:10:06.698615997 +0800
@@ -32,7 +32,9 @@
 ##############################################################################
 # Download a FITS file
 
-event_filename = get_pkg_data_filename('tutorials/FITS-tables/chandra_events.fits')
+# use local fits if no network
+try: event_filename = get_pkg_data_filename('tutorials/FITS-tables/chandra_events.fits')
+except Exception: event_filename = 'chandra_events.fits'
 
 ##############################################################################
 # Display information about the contents of the FITS file.
--- a/examples/io/modify-fits-header.py	2023-03-28 18:42:59.000000000 +0800
+++ b/examples/io/modify-fits-header.py	2023-04-11 19:10:06.698615997 +0800
@@ -22,7 +22,9 @@
 
 from astropy.utils.data import get_pkg_data_filename
 
-fits_file = get_pkg_data_filename('tutorials/FITS-Header/input_file.fits')
+# use local fits if no network
+try: fits_file = get_pkg_data_filename('tutorials/FITS-Header/input_file.fits')
+except Exception: fits_file = 'input_file.fits'
 
 ##############################################################################
 # Look at contents of the FITS file
--- a/examples/io/plot_fits-image.py	2023-03-28 18:42:59.000000000 +0800
+++ b/examples/io/plot_fits-image.py	2023-04-11 19:16:33.036076667 +0800
@@ -30,7 +30,9 @@
 from astropy.utils.data import get_pkg_data_filename
 from astropy.io import fits
 
-image_file = get_pkg_data_filename('tutorials/FITS-images/HorseHead.fits')
+# use local data if no network
+try: image_file = get_pkg_data_filename('tutorials/FITS-images/HorseHead.fits')
+except Exception: image_file = 'HorseHead.fits'
 
 ##############################################################################
 # Use `astropy.io.fits.info()` to display the structure of the file:
